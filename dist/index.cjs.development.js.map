{"version":3,"file":"index.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["// @ts-nocheck\n\nexport const enum EnumKinds\n{\n\t/**\n\t * Item was edited\n\t */\n\tDiffEdit = 'E',\n\t/**\n\t * Item is new\n\t */\n\tDiffNew = 'N',\n\t/**\n\t * Item was edited\n\t */\n\tDiffDeleted = 'D',\n\t/**\n\t * Array was modified\n\t */\n\tDiffArray = 'A',\n}\n\nconst validKinds = [EnumKinds.DiffNew, EnumKinds.DiffEdit, EnumKinds.DiffArray, EnumKinds.DiffDeleted] as const;\n\nexport type IPathKey = string | number | symbol;\nexport type IPaths = IPathKey[];\n\nexport type IDiffNode<LHS = unknown, RHS = LHS> = DiffNew<RHS> | DiffDeleted<LHS> | DiffEdit<LHS, RHS> | DiffArray<LHS, RHS>;\n\nexport type Observer<LHS, RHS = LHS> = (diff: IDiffNode<LHS, RHS>) => void;\n\nexport type PreFilterFunction = (path: any[], key: any) => boolean;\nexport interface PreFilterObject<LHS, RHS = LHS> {\n\tprefilter?(path: any[], key: any): boolean;\n\tnormalize?(currentPath: any, key: any, lhs: LHS, rhs: RHS): [ LHS, RHS ] | undefined;\n}\n\nexport type PreFilter<LHS, RHS = LHS> = PreFilterFunction | PreFilterObject<LHS, RHS>;\n\nexport type Filter<LHS, RHS = LHS> = (target: LHS, source: RHS, change: IDiffNode<LHS, RHS>) => boolean;\n\nexport abstract class Diff\n{\n\tpublic path: IPaths;\n\n\tprotected constructor(public kind: EnumKinds, path?: IPaths)\n\t{\n\t\tif (path?.length)\n\t\t{\n\t\t\tthis.path = path\n\t\t}\n\t}\n}\n\n/**\n * Item was edited\n */\nexport class DiffEdit<LHS, RHS = LHS> extends Diff\n{\n\tpublic override kind: EnumKinds.DiffEdit;\n\n\tconstructor(path: IPaths, public lhs: LHS, public rhs: RHS)\n\t{\n\t\tsuper(EnumKinds.DiffEdit, path);\n\t}\n}\n\n/**\n * Item is new\n */\nexport class DiffNew<RHS> extends Diff\n{\n\tpublic override kind: EnumKinds.DiffNew;\n\n\tconstructor(path: IPaths, public rhs: RHS)\n\t{\n\t\tsuper(EnumKinds.DiffNew, path);\n\t}\n}\n\n/**\n * Item was edited\n */\nexport class DiffDeleted<LHS> extends Diff\n{\n\tpublic override kind: EnumKinds.DiffDeleted;\n\n\tconstructor(path: IPaths, public lhs: LHS)\n\t{\n\t\tsuper(EnumKinds.DiffDeleted, path);\n\t}\n}\n\n/**\n * Array was modified\n */\nexport class DiffArray<LHS, RHS = LHS> extends Diff\n{\n\tpublic override kind: EnumKinds.DiffArray;\n\n\tconstructor(path: IPaths, public index: number, public item: IDiffNode<LHS, RHS>)\n\t{\n\t\tsuper(EnumKinds.DiffArray, path);\n\t}\n}\n\nfunction arrayRemove<T extends any[]>(arr: T, from: number)\n{\n\treturn arr.splice(from, 1);\n\n//\tconst rest = arr.slice((to || from) + 1 || arr.length);\n//\tarr.length = from < 0 ? arr.length + from : from;\n//\tarr.push.apply(arr, rest);\n//\treturn arr;\n}\n\nfunction realTypeOf(subject: unknown)\n{\n\tconst type = typeof subject;\n\tif (type !== 'object')\n\t{\n\t\treturn type;\n\t}\n\n\tif (subject === Math)\n\t{\n\t\treturn 'math';\n\t}\n\telse if (subject === null)\n\t{\n\t\treturn 'null';\n\t}\n\telse if (Array.isArray(subject))\n\t{\n\t\treturn 'array';\n\t}\n\telse if (Object.prototype.toString.call(subject) === '[object Date]')\n\t{\n\t\treturn 'date';\n\t}\n\telse if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString()))\n\t{\n\t\treturn 'regexp';\n\t}\n\treturn 'object';\n}\n\n/**\n * @see http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n */\nfunction hashThisString(string: string)\n{\n\tlet hash = 0;\n\tif (string.length === 0)\n\t{ return hash; }\n\tfor (let i = 0; i < string.length; i++)\n\t{\n\t\tconst char = string.charCodeAt(i);\n\t\thash = ((hash << 5) - hash) + char;\n\t\thash = hash & hash; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\n/**\n * Gets a hash of the given object in an array order-independent fashion\n * also object key order independent (easier since they can be alphabetized)\n */\nexport function getOrderIndependentHash(object: unknown)\n{\n\tlet accum = 0;\n\tconst type = realTypeOf(object);\n\n\tif (type === 'array')\n\t{\n\t\tobject.forEach(function (item)\n\t\t{\n\t\t\t// Addition is commutative so this is order indep\n\t\t\taccum += getOrderIndependentHash(item);\n\t\t});\n\n\t\tconst arrayString = normalizeHashDesc(type, {\n\t\t\thash: accum,\n\t\t})\n\n\t\treturn accum + hashThisString(arrayString);\n\t}\n\telse if (type === 'object')\n\t{\n\t\tfor (const key in object)\n\t\t{\n\t\t\tif (object.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\tconst keyValueString = normalizeHashDesc(type, {\n\t\t\t\t\tkey,\n\t\t\t\t\thash: getOrderIndependentHash(object[key]),\n\t\t\t\t});\n\n\t\t\t\taccum += hashThisString(keyValueString);\n\t\t\t}\n\t\t}\n\n\t\treturn accum;\n\t}\n\n\t// Non object, non array...should be good?\n\tconst stringToHash = normalizeHashDesc(type, {\n\t\tvalue: object,\n\t});\n\n\treturn accum + hashThisString(stringToHash);\n}\n\nfunction normalizeHashDesc(type: ReturnType<typeof realTypeOf>, options: {\n\tvalue?: any,\n\tkey?: IPathKey,\n\thash?: number,\n})\n{\n\tswitch (type)\n\t{\n\t\tcase 'array':\n\t\t\treturn `[ type: ${type} , hash: ${options.hash}]`;\n\t\tcase 'object':\n\t\t\treturn `[ type: ${type}, key: ${options.key} , hash: ${options.hash}]`;\n\t\tdefault:\n\t\t\treturn `[ type: ${type} , value: ${options.value}]`;\n\t}\n}\n\nfunction _deepDiff(lhs, rhs, changes: IDiffNode[], prefilter, path: IPaths, key, stack, orderIndependent: boolean)\n{\n\tchanges = changes || [];\n\tpath = path || [];\n\tstack = stack || [];\n\tconst currentPath = path.slice(0);\n\tif (typeof key !== 'undefined' && key !== null)\n\t{\n\t\tif (prefilter)\n\t\t{\n\t\t\tif (typeof (prefilter) === 'function' && prefilter(currentPath, key))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (typeof (prefilter) === 'object')\n\t\t\t{\n\t\t\t\tif (prefilter.prefilter && prefilter.prefilter(currentPath, key))\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (prefilter.normalize)\n\t\t\t\t{\n\t\t\t\t\tvar alt = prefilter.normalize(currentPath, key, lhs, rhs);\n\t\t\t\t\tif (alt)\n\t\t\t\t\t{\n\t\t\t\t\t\tlhs = alt[0];\n\t\t\t\t\t\trhs = alt[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcurrentPath.push(key);\n\t}\n\n\t// Use string comparison for regexes\n\tif (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp')\n\t{\n\t\tlhs = lhs.toString();\n\t\trhs = rhs.toString();\n\t}\n\n\tconst ltype = typeof lhs;\n\tconst rtype = typeof rhs;\n\tlet i, j, k, other;\n\n\tconst ldefined = ltype !== 'undefined' ||\n\t\t(stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n\t\t\tObject.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n\tconst rdefined = rtype !== 'undefined' ||\n\t\t(stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n\t\t\tObject.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n\tif (!ldefined && rdefined)\n\t{\n\t\tchanges.push(new DiffNew(currentPath, rhs));\n\t}\n\telse if (!rdefined && ldefined)\n\t{\n\t\tchanges.push(new DiffDeleted(currentPath, lhs));\n\t}\n\telse if (realTypeOf(lhs) !== realTypeOf(rhs))\n\t{\n\t\tchanges.push(new DiffEdit(currentPath, lhs, rhs));\n\t}\n\telse if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0)\n\t{\n\t\tchanges.push(new DiffEdit(currentPath, lhs, rhs));\n\t}\n\telse if (ltype === 'object' && lhs !== null && rhs !== null)\n\t{\n\t\tfor (i = stack.length - 1; i > -1; --i)\n\t\t{\n\t\t\tif (stack[i].lhs === lhs)\n\t\t\t{\n\t\t\t\tother = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!other)\n\t\t{\n\t\t\tstack.push({ lhs: lhs, rhs: rhs });\n\t\t\tif (Array.isArray(lhs))\n\t\t\t{\n\t\t\t\t// If order doesn't matter, we need to sort our arrays\n\t\t\t\tif (orderIndependent)\n\t\t\t\t{\n\t\t\t\t\tlhs.sort(function (a, b)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn getOrderIndependentHash(a) - getOrderIndependentHash(b);\n\t\t\t\t\t});\n\n\t\t\t\t\trhs.sort(function (a, b)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn getOrderIndependentHash(a) - getOrderIndependentHash(b);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ti = rhs.length - 1;\n\t\t\t\tj = lhs.length - 1;\n\t\t\t\twhile (i > j)\n\t\t\t\t{\n\t\t\t\t\tchanges.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n\t\t\t\t}\n\t\t\t\twhile (j > i)\n\t\t\t\t{\n\t\t\t\t\tchanges.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n\t\t\t\t}\n\t\t\t\tfor (; i >= 0; --i)\n\t\t\t\t{\n\t\t\t\t\t_deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar akeys = Object.keys(lhs).concat(Object.getOwnPropertySymbols(lhs));\n\t\t\t\tvar pkeys = Object.keys(rhs).concat(Object.getOwnPropertySymbols(rhs));\n\t\t\t\tfor (i = 0; i < akeys.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tk = akeys[i];\n\t\t\t\t\tother = pkeys.indexOf(k);\n\t\t\t\t\tif (other >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t_deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n\t\t\t\t\t\tpkeys[other] = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < pkeys.length; ++i)\n\t\t\t\t{\n\t\t\t\t\tk = pkeys[i];\n\t\t\t\t\tif (k)\n\t\t\t\t\t{\n\t\t\t\t\t\t_deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.length = stack.length - 1;\n\t\t}\n\t\telse if (lhs !== rhs)\n\t\t{\n\t\t\t// lhs is contains a cycle at this element and it differs from rhs\n\t\t\tchanges.push(new DiffEdit(currentPath, lhs, rhs));\n\t\t}\n\t}\n\telse if (lhs !== rhs)\n\t{\n\t\tif (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs)))\n\t\t{\n\t\t\tchanges.push(new DiffEdit(currentPath, lhs, rhs));\n\t\t}\n\t}\n}\n\nexport function observableDiff<LHS, RHS = LHS>(lhs: LHS, rhs: RHS, observer?: Observer<LHS, RHS>, prefilter?: PreFilter<LHS, RHS>, orderIndependent?: boolean)\n{\n\tconst changes: IDiffNode[] = [];\n\t_deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n\tif (observer)\n\t{\n\t\tfor (let i = 0; i < changes.length; ++i)\n\t\t{\n\t\t\tobserver(changes[i]);\n\t\t}\n\t}\n\treturn changes;\n}\n\nexport function orderIndependentObservableDiff(lhs, rhs, changes, prefilter, path, key, stack)\n{\n\treturn _deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n}\n\nexport function deepDiff<LHS, RHS = LHS>(lhs: LHS, rhs: RHS, prefilter?: PreFilter<LHS, RHS>, accum?: IDiffNode<LHS, RHS>[]): IDiffNode<LHS, RHS>[]\n{\n\tconst observer = (accum) ?\n\t\tfunction (difference: IDiffNode)\n\t\t{\n\t\t\tif (difference)\n\t\t\t{\n\t\t\t\taccum!.push(difference);\n\t\t\t}\n\t\t} : undefined;\n\tconst changes = observableDiff(lhs, rhs, observer, prefilter);\n\treturn (accum) ? accum : (changes.length) ? changes : undefined;\n}\n\nexport function orderIndependentDiff<LHS, RHS = LHS>(lhs: LHS, rhs: RHS, prefilter?: PreFilter<LHS, RHS>, accum?: IDiffNode<LHS, RHS>[])\n{\n\tconst observer = (accum) ?\n\t\tfunction (difference: IDiffNode<LHS, RHS>)\n\t\t{\n\t\t\tif (difference)\n\t\t\t{\n\t\t\t\taccum!.push(difference);\n\t\t\t}\n\t\t} : undefined;\n\tconst changes = observableDiff(lhs, rhs, observer, prefilter, true);\n\treturn (accum) ? accum : (changes.length) ? changes : undefined;\n}\n\nfunction _traversalObject<T>(target: any, path: IPaths)\n{\n\tpath = path.slice();\n\n\tconst key = path.pop();\n\n\tlet it: T = target;\n\n\tpath.reduce((target, key) => {\n\t\treturn it = target[key]\n\t}, it);\n\n\treturn [it, key] as const\n}\n\nfunction _applyArrayChange<T extends any[]>(arr: T, index: number, change: IDiffNode)\n{\n\tif (change.path?.length)\n\t{\n//\t\tlet it = arr[index],\n//\t\t\ti, u = change.path.length - 1;\n//\t\tfor (i = 0; i < u; i++)\n//\t\t{\n//\t\t\tit = it[change.path[i]];\n//\t\t}\n//\n//\t\tlet key = change.path[i];\n\n\t\tlet [it, key] = _traversalObject(arr[index], change.path);\n\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase 'A':\n\t\t\t\t_applyArrayChange(it[key], change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tdelete it[key];\n\t\t\t\tbreak;\n\t\t\tcase 'E':\n\t\t\tcase 'N':\n\t\t\t\tit[key] = change.rhs;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\telse\n\t{\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase 'A':\n\t\t\t\t_applyArrayChange(arr[index], change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tarr = arrayRemove(arr, index);\n\t\t\t\tbreak;\n\t\t\tcase 'E':\n\t\t\tcase 'N':\n\t\t\t\tarr[index] = change.rhs;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn arr;\n}\n\nexport function isIDiffNode<T extends IDiffNode>(source?: unknown): source is T\n{\n\treturn (source ?? false) && validKinds.includes(source.kind)\n}\n\nexport function applyChange<LHS>(target: LHS, source: any, change: IDiffNode<LHS, any>)\n{\n\tif (typeof change === 'undefined' && isIDiffNode(source))\n\t{\n\t\tchange = source;\n\t}\n\tif (target && change && change.kind)\n\t{\n\t\tlet it = target,\n\t\t\ti = -1,\n\t\t\tlast = change.path ? change.path.length - 1 : 0;\n\t\twhile (++i < last)\n\t\t{\n\t\t\tif (typeof it[change.path[i]] === 'undefined')\n\t\t\t{\n\t\t\t\tit[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number')\n\t\t\t\t\t? []\n\t\t\t\t\t: {};\n\t\t\t}\n\t\t\tit = it[change.path[i]];\n\t\t}\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase 'A':\n\t\t\t\tif (change.path && typeof it[change.path[i]] === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tit[change.path[i]] = [];\n\t\t\t\t}\n\t\t\t\t_applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tdelete it[change.path[i]];\n\t\t\t\tbreak;\n\t\t\tcase 'E':\n\t\t\tcase 'N':\n\t\t\t\tit[change.path[i]] = change.rhs;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction revertArrayChange<T extends any[]>(arr: T, index: number, change: IDiffNode)\n{\n\tif (change.path && change.path.length)\n\t{\n\t\t// the structure of the object at the index has changed...\n\t\tlet it = arr[index],\n\t\t\ti, u = change.path.length - 1;\n\t\tfor (i = 0; i < u; i++)\n\t\t{\n\t\t\tit = it[change.path[i]];\n\t\t}\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase EnumKinds.DiffArray:\n\t\t\t\trevertArrayChange(it[change.path[i]], change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffDeleted:\n\t\t\t\tit[change.path[i]] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffEdit:\n\t\t\t\tit[change.path[i]] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffNew:\n\t\t\t\tdelete it[change.path[i]];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\telse\n\t{\n\t\t// the array item is different...\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase EnumKinds.DiffArray:\n\t\t\t\trevertArrayChange(arr[index], change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffDeleted:\n\t\t\t\tarr[index] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffEdit:\n\t\t\t\tarr[index] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffNew:\n\t\t\t\tarr = arrayRemove(arr, index);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn arr;\n}\n\nexport function revertChange<LHS>(target: LHS, source: any, change: IDiffNode)\n{\n\tif (target && source && change?.kind)\n\t{\n\t\tlet it = target,\n\t\t\ti, u;\n\t\tu = change.path.length - 1;\n\t\tfor (i = 0; i < u; i++)\n\t\t{\n\t\t\tif (typeof it[change.path[i]] === 'undefined')\n\t\t\t{\n\t\t\t\tit[change.path[i]] = {};\n\t\t\t}\n\t\t\tit = it[change.path[i]];\n\t\t}\n\t\tswitch (change.kind)\n\t\t{\n\t\t\tcase EnumKinds.DiffArray:\n\t\t\t\t// Array was modified...\n\t\t\t\t// it will be an array...\n\t\t\t\trevertArrayChange(it[change.path[i]], change.index, change.item);\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffDeleted:\n\t\t\t\t// Item was deleted...\n\t\t\t\tit[change.path[i]] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffEdit:\n\t\t\t\t// Item was edited...\n\t\t\t\tit[change.path[i]] = change.lhs;\n\t\t\t\tbreak;\n\t\t\tcase EnumKinds.DiffNew:\n\t\t\t\t// Item is new...\n\t\t\t\tdelete it[change.path[i]];\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport function applyDiff<LHS, RHS = LHS>(target: LHS, source: RHS, filter?: Filter<LHS, RHS>)\n{\n\tif (target && source)\n\t{\n\t\tconst onChange = function (change: IDiffNode<LHS, RHS>)\n\t\t{\n\t\t\tif (!filter || filter(target, source, change))\n\t\t\t{\n\t\t\t\tapplyChange(target, source, change);\n\t\t\t}\n\t\t};\n\t\tobservableDiff(target, source, onChange);\n\t}\n\treturn target\n}\n\nfunction _applyDiffChangeCore<T>(lhs: unknown, differences: IDiffNode<any, any>[], fn: (lhs: any, source: true, it: IDiffNode<any, any>) => any): lhs is T\n{\n\tdifferences.forEach((it) => {\n\t\tfn(lhs, true, it);\n\t});\n\n\treturn true;\n}\n\nexport function applyDiffChange<RHS>(lhs: unknown, differences: IDiffNode<any, RHS>[]): RHS\n{\n\tif (_applyDiffChangeCore<RHS>(lhs, differences, applyChange))\n\t{\n\t\treturn lhs\n\t}\n}\n\nexport function revertDiffChange<LHS>(lhs: unknown, differences: IDiffNode<LHS, any>[]): LHS\n{\n\tif (_applyDiffChangeCore<LHS>(lhs, differences, revertChange))\n\t{\n\t\treturn lhs\n\t}\n}\n\nexport { deepDiff as diff }\n\nexport default deepDiff;\n\n"],"names":["EnumKinds","validKinds","Diff","constructor","kind","path","length","DiffEdit","lhs","rhs","DiffNew","DiffDeleted","DiffArray","index","item","arrayRemove","arr","from","splice","realTypeOf","subject","type","Math","Array","isArray","Object","prototype","toString","call","test","hashThisString","string","hash","i","char","charCodeAt","getOrderIndependentHash","object","accum","forEach","arrayString","normalizeHashDesc","key","hasOwnProperty","keyValueString","stringToHash","value","options","_deepDiff","changes","prefilter","stack","orderIndependent","currentPath","slice","normalize","alt","push","ltype","rtype","j","k","other","ldefined","getOwnPropertyDescriptor","rdefined","sort","a","b","undefined","akeys","keys","concat","getOwnPropertySymbols","pkeys","indexOf","isNaN","observableDiff","observer","orderIndependentObservableDiff","deepDiff","difference","orderIndependentDiff","_traversalObject","target","pop","it","reduce","_applyArrayChange","change","isIDiffNode","source","includes","applyChange","last","revertArrayChange","u","revertChange","applyDiff","filter","onChange","_applyDiffChangeCore","differences","fn","applyDiffChange","revertDiffChange"],"mappings":"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"}